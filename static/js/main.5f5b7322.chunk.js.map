{"version":3,"sources":["InfoPopup.jsx","PeriodicTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["InfoPopup","_ref","element","setIsPopupOpen","color","React","createElement","style","position","background","top","left","right","bottom","display","alignItems","justifyContent","border","concat","width","padding","animation","name","onClick","cursor","GrFormClose","size","summary","borderRadius","fontStyle","phase","block","atomic_mass","toFixed","number","symbol","electron_configuration","appearance","src","image","url","alt","attribution","maxWidth","bohr_model_image","discovered_by","fontWeight","PeriodicTable","_React$useState","useState","_React$useState2","_slicedToArray","isPopupOpen","_React$useState3","_React$useState4","activeElement","setActiveElement","_React$useState5","_React$useState6","setColor","colorMap","noble gas","alkaline earth metal","diatomic nonmetal","alkali metal","transition metal","post-transition metal","polyatomic nonmetal","lanthanide","actinide","metalloid","unknown, probably transition metal","unknown, probably post-transition metal","unknown, probably metalloid","unknown, predicted to be noble gas","unknown, but predicted to be an alkali metal","className","data","elements","map","Fragment","key","gridColumn","xpos","gridRow","ypos","borderColor","category","handleClick","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5f5b7322.chunk.js","sourcesContent":["import React from 'react'\r\nimport { GrFormClose } from \"react-icons/gr\";\r\n\r\nexport default function InfoPopup({element, setIsPopupOpen, color}) {\r\n  return (\r\n    <div style={{\r\n        position: \"fixed\",\r\n        background: \"rgba(0,0,0,0.7)\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }}>\r\n        <div style={{\r\n            background: \"white\",\r\n            border: `6px solid ${color}`,\r\n            width: \"600px\",\r\n            padding: \"20px 40px\",\r\n            position: \"relative\",\r\n            animation: \"dropTop .2s linear\"\r\n        }}>\r\n            <div>\r\n                <h1 style={{color: color}}>{element.name}</h1>\r\n                <div onClick={() => setIsPopupOpen(false)} style={{position: \"absolute\", top: 10, right: 10, cursor: \"pointer\"}}><GrFormClose size=\"1.5rem\" /></div>\r\n            </div>\r\n            <div>\r\n                <p><small>{element.summary}</small></p>\r\n            </div>\r\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                <p style={{border: `1px solid ${color}`, borderRadius: \"5em\", padding: \"0.1em 0.35em\"}}><span style={{fontStyle: \"italic\"}}>Phase: {element.phase}</span></p>\r\n                <p style={{border: `1px solid ${color}`, borderRadius: \"5em\", padding: \"0.1em 0.35em\"}}><span style={{fontStyle: \"italic\"}}>Block: {element.block}</span></p>\r\n                <p style={{border: `1px solid ${color}`, borderRadius: \"5em\", padding: \"0.1em 0.35em\"}}><span style={{fontStyle: \"italic\"}}>Atomic Mass: {element.atomic_mass.toFixed(2)}</span></p>\r\n                <p style={{border: `1px solid ${color}`, borderRadius: \"5em\", padding: \"0.1em 0.35em\"}}><span style={{fontStyle: \"italic\"}}>Number: {element.number}</span></p>\r\n                <p style={{border: `1px solid ${color}`, borderRadius: \"5em\", padding: \"0.1em 0.35em\"}}><span style={{fontStyle: \"italic\"}}>Symbol: {element.symbol}</span></p>\r\n            </div>\r\n            <div>\r\n                <p>Electron Configuration: {element.electron_configuration}</p>\r\n            </div>\r\n            {element.appearance && <div>\r\n                <p>Appearance: {element.appearance}</p>\r\n            </div>}\r\n            <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                <img src={element.image.url} alt={element.image.attribution} style={{maxWidth: \"150px\"}}/>\r\n                {element.bohr_model_image && <img src={element.bohr_model_image} alt=\"bohr's model\" style={{maxWidth: \"250px\"}}/>}\r\n            </div>\r\n            {element.discovered_by && <div>\r\n                <p style={{fontStyle: \"italic\", fontWeight: 500}}><small>- Discovered by: {element.discovered_by}</small></p>\r\n            </div>}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport InfoPopup from './InfoPopup';\r\nimport \"./PeriodicTable.css\"\r\nimport data from \"./PeriodicTableJSON.json\"\r\n\r\nexport default function PeriodicTable() {\r\n    const [isPopupOpen, setIsPopupOpen] = React.useState(false);\r\n    const [activeElement, setActiveElement] = React.useState({});\r\n    const [color, setColor] = React.useState('');\r\n    const colorMap = {\r\n        \"noble gas\": \"#FFBC42\",\r\n        \"alkaline earth metal\": \"#EC674E\",\r\n        \"diatomic nonmetal\": \"#D81159\",\r\n        \"alkali metal\": \"#8F2D56\",\r\n        \"transition metal\": \"#58586B\",\r\n        \"post-transition metal\": \"#218380\",\r\n        \"polyatomic nonmetal\": \"#454dd9\",\r\n        \"lanthanide\": \"#4AABAF\",\r\n        \"actinide\": \"#de8e73\",\r\n        \"metalloid\": \"#73D2DE\",\r\n        \"unknown, probably transition metal\": \"#a19e9d\",\r\n        \"unknown, probably post-transition metal\": \"#a19e9d\",\r\n        \"unknown, probably metalloid\": \"#a19e9d\",\r\n        \"unknown, predicted to be noble gas\": \"#a19e9d\",\r\n        \"unknown, but predicted to be an alkali metal\": \"#a19e9d\",\r\n      };\r\n\r\n    const handleClick= (element) => {\r\n        setIsPopupOpen(true)\r\n        setActiveElement(element)\r\n        setColor(colorMap[element.category])\r\n    };\r\n    \r\n  return (\r\n    <div className='wrapper'>\r\n        <div className='periodic-table'>\r\n            {data.elements.map((element) => (\r\n                <>\r\n                {/* <div className='periodic-table'> */}\r\n                    <div\r\n                        key={element.name}\r\n                        className=\"element\"\r\n                        style={{\r\n                            gridColumn: element.xpos,\r\n                            gridRow: element.ypos,\r\n                            borderColor: colorMap[element.category]\r\n                        }}\r\n                        onClick={() => handleClick(element)}\r\n                    >\r\n                        <strong style={{ color: colorMap[element.category] }}>{element.symbol}</strong>\r\n                        <small className='number'>{element.number}</small>\r\n                        <small className='name'>{element.name}</small>\r\n                    </div>\r\n                {/* </div> */}\r\n            </>\r\n            ))}\r\n        </div>\r\n        {isPopupOpen && <InfoPopup element={activeElement} setIsPopupOpen={setIsPopupOpen} color={color}/>}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport PeriodicTable from \"./PeriodicTable\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Periodic Table of Elements</h1>\n      <PeriodicTable/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}